{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "OCReleaseVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCTransAgtVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCWeb1VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCWeb2VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCApp1VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCApp2VMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCAgentVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCBDIVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },

    "FormFastVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCMDVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "OCCaptivaVMName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine name."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    //"dnsLabelPrefix": {
    //  "type": "string",
    //  "metadata": {
    //    "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
    //  }
    //},
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "2016-Nano-Server-Technical-Preview",
        "2016-Technical-Preview-with-Containers",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "VMSize1": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "metadata": {
        "description": "The size of the VM."
      }
    },
    "VMSize2": {
      "type": "string",
      "defaultValue": "Standard_D2",
      "allowedValues": [
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4",
        "Standard_A5"
      ],
      "metadata": {
        "description": "The size of the VM."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Change this value to your repo name if deploying from a fork"
      },
      "defaultValue": "https://raw.githubusercontent.com/EISSystemsDevOps/Automation/master/Resources"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "group": "Infrastructure settings",
        "description": "Auto-generated token to access _artifactsLocation",
        "artifactsLocationSasToken": ""
      },
      "defaultValue": ""
    },
    "storageAcctNewOrExisting": {
      "type": "string",
      "allowedValues": [
        "new",
        "existing"
      ] ,
      "metadata": {
        "description": "Use a new or existing storage account"
      },
      "defaultValue": "new"
    },
    "storageAcctResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "Resource Group for storage account for VHD placement. Only needed if using existing storage account"
      },
      "defaultValue": ""
    },

    "storageAcctName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage Account for VHD placement."
      }//,
//      "defaultValue": "[tolower(concat(parameters('CustomerName'),'sa'))]"
    },
    "storageAcctContainerName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage Account container for VHD placement."
      },
      "defaultValue": "vhds"
    },
    //"frontEndPort": {
    //  "type": "string",
    //  "metadata": {
    //    "description": "Front end port for NAT purposes for load balancer."
    //  },
    //  "defaultValue": ""
    //},
    //"backEndPort": {
    //  "type": "string",
    //  "metadata": {
    //    "description": "Back end port for NAT purposes for load balancer."
    //  },
    //  "defaultValue": ""
    //},
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Local AD domain name to be setup."
      },
      "defaultValue": "OCTRAIN.COM"
    },
    //"domainControllerIPAddress": {
    //  "type": "string",
    //  "metadata": {
    //    "description": "IP address to use for domain controller and DNS."
    //  },
    //  "defaultValue": "172.216.16.17"
    //},
    "VNetRG": {
      "type": "string",
      "defaultValue": "ParagonDevOpsARMVNetRG",
      "metadata": {
        "description": "VNet to deploy VMs into."
      }
    },

    "VNetName": {
      "type": "string",
      "defaultValue": "ParagonDevOpsARMVNet",
      "metadata": {
        "description": "VNet resource group to deploy VMs into."
      }
    },
    "SubnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Subnet to deploy VMs into."
      }
    }
  
  },//End of Parameters


  "variables": {
    //"dnsLabelPrefix1": "[tolower(concat(parameters('CustomerName'),parameters('OCReleaseVMName'),'-pip'))]",
    //"dnsLabelPrefix2": "[tolower(concat(parameters('CustomerName'),parameters('OCTransAgtVMName'),'-pip'))]",
    //"storageAccountName": "[parameters('storageAcctName')]",
    //"virtualNetworkName": "[concat(parameters('CustomerName'),'VNET01')]",
    //"subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('VNetObject').subnet2Name)]",
    //"domainName": "OCTRAIN.COM",
    "domainUser": "concat(parameters('domainName'),'\\',parameters('adminUsername'))",
    //DSC URLs
    "DSCmodulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/')]",
    //"DSCmodulesUrl": "[concat(parameters('_artifactsLocation'),'/')]",
    "WebDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'WebServerConfig.ps1.zip')]",
    "WebConfigurationFunction": "WebServerConfig.ps1\\WebServerConfig",
    "NtierDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'NtierServerConfig.ps1.zip')]",
    "NtierConfigurationFunction": "NtierServerConfig.ps1\\NtierServerConfig",
    "BreDSCModuleUrl": "[concat(variables('DSCmodulesUrl'),'BreServerConfig.ps1.zip')]",
    "BreConfigurationFunction": "BreServerConfig.ps1\\BreServerConfig",
    //    "adPDCModulesURL": "[concat(variables('DSCmodulesUrl'),'CreateADPDC.ps1.zip')]",
    //    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
    //"assetLocation": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/active-directory-new-domain-ha-2-dc/",
    "adPDCModulesURL": "[concat(parameters('_artifactsLocation'),'/CreateADPDC.ps1.zip')]",
    "adPDCConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",

    //Template URIs
    "TemplateUrl": "[concat(parameters('_artifactsLocation'),'/Templates')]",
    "AvailabilitySetURI": "[concat(variables('TemplateUrl'),'/','availability_set.json')]",
    ////  This is a NIC with a Load Balancer attached:
    "NetworkInterfaceLBURI": "[concat(variables('TemplateUrl'),'/','network_interface_lb.json')]",
    ////  This is a network interface with static IP address
    "NetworkInterfaceStaticURI": "[concat(variables('TemplateUrl'),'/','network_interface_static.json')]",
    ////This is a standard NIC with a Public IP attached:
    "NetworkInterfacePIPURI": "[concat(variables('TemplateUrl'),'/','network_interface_pip.json')]",
    ////This is a standard NIC without a Public IP or Load balancer:
    "NetworkInterfaceURI": "[concat(variables('TemplateUrl'),'/','network_interface.json')]",
    "NetworkInterfaceDNSURI": "[concat(variables('TemplateUrl'),'/','network_interface_dns.json')]",
    ////  Comment out the LoadBalancerResource section as well if you want to forego Load balancer
    ////  Comment out the Public IP section as well if you want to forego Public IP
    "PublicIPURI": "[concat(variables('TemplateUrl'),'/','public_ip.json')]",
    "VNetURI": "[concat(variables('TemplateUrl'),'/','full_vnet.json')]",
    "VMURI": "[concat(variables('TemplateUrl'),'/','vm.json')]",
    "VMOneDataDiskURI": "[concat(variables('TemplateUrl'),'/','vm_one_datadisk.json')]",
    "VMTwoDataDisksURI": "[concat(variables('TemplateUrl'),'/','vm_two_datadisks.json')]",
    "VMFourDataDisksURI": "[concat(variables('TemplateUrl'),'/','vm_four_datadisks.json')]",
    "VMEightDataDisksURI": "[concat(variables('TemplateUrl'),'/','vm_eight_datadisks.json')]",
    "StorageAccountURI": "[concat(variables('TemplateUrl'),'/',parameters('storageAcctNewOrExisting'),'_storage_account.json')]",
    "NetworkSecurityGroupURI": "[concat(variables('TemplateUrl'),'/','rdp_network_security_group.json')]",
 //   "LoadBalancerURI": "[concat(variables('TemplateUrl'),'/','load_balancer.json')]",

    //Objects
    //"VNetObject": {
    //  "ResourceGroup": "rgslcesprodarmvnet",
    //  "VNetName": "slcesprodarmvnet",
    //  "AddressPrefix": "",
    //  "subnet1Name": "Subnet-1",
    //  "subnet1Prefix": ""
    //  "subnet2Name": "Subnet-2",
    //  "subnet2Prefix": ""
    //},
    //has to be outside of VNetObject to avoid circular reference
    "VnetRefObject": {
      "vnetID": "[resourceId(parameters('VNetRG'), 'Microsoft.Network/virtualNetworks', parameters('VNetName'))]"
    },
    "subnetRef": "[concat(variables('VnetRefObject').vnetID,'/subnets/', parameters('subnetName'))]",

    "ASObject1": {
      "Name": "[concat(parameters('OCReleaseVMName'),'-AS')]",
      "Location": "East US"
    },
    "ASObject2": {
      "Name": "[concat(parameters('OCTransAgtVMName'),'-AS')]",
      "Location": "East US"
    },

    "StorageAccountObject": {
      "Name": "[parameters('storageAcctName')]",
      "SkuName": "Standard_LRS",
      "ResourceGroup": "[parameters('storageAcctResourceGroup')]"
    },

    "NICObject1": {
      "Name": "[concat(parameters('OCReleaseVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject2": {
      "Name": "[concat(parameters('OCTransAgtVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject3": {
      "Name": "[concat(parameters('OCWeb1VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject4": {
      "Name": "[concat(parameters('OCWeb2VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"

    },
    "NICObject5": {
      "Name": "[concat(parameters('OCApp1VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject6": {
      "Name": "[concat(parameters('OCApp2VMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject7": {
      "Name": "[concat(parameters('OCAgentVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"

    },
    "NICObject8": {
      "Name": "[concat(parameters('OCBDIVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },
    "NICObject9": {
      "Name": "[concat(parameters('FormFastVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"    
    },
    "NICObject10": {
      "Name": "[concat(parameters('OCMDVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"

    },
    "NICObject11": {
      "Name": "[concat(parameters('OCCaptivaVMName'),'-Nic')]",
      "subnetRef": "[variables('SubnetRef')]"
    },

    "VMObject1": {
      "Name": "[parameters('OCReleaseVMName')]",
      "Size": "[parameters('VMSize1')]",
      //      "ASName": "[variables('ASObject1').Name]",
      "nicName": "[variables('NICObject1').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"
    },
    "VMObject2": {
      "Name": "[parameters('OCTransAgtVMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject2').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject3": {
      "Name": "[parameters('OCWeb1VMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject1').Name]",
      "nicName": "[variables('NICObject3').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject4": {
      "Name": "[parameters('OCWeb2VMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject4').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject5": {
      "Name": "[parameters('OCApp1VMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject1').Name]",
      "nicName": "[variables('NICObject5').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject6": {
      "Name": "[parameters('OCApp2VMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject6').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"


    },
    "VMObject7": {
      "Name": "[parameters('OCAgentVMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject1').Name]",
      "nicName": "[variables('NICObject7').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject8": {
      "Name": "[parameters('OCBDIVMName')]",
      "Size": "[parameters('VMSize1')]",
      //     "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject8').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject9": {
      "Name": "[parameters('FormFastVMName')]",
      "Size": "[parameters('VMSize1')]",
      //    "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject9').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject10": {
      "Name": "[parameters('OCMDVMName')]",
      "Size": "[parameters('VMSize1')]",
      //    "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject10').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    },
    "VMObject11": {
      "Name": "[parameters('OCCaptivaVMName')]",
      "Size": "[parameters('VMSize1')]",
      //    "ASName": "[variables('ASObject2').Name]",
      "nicName": "[variables('NICObject11').Name]",
      "adminUserName": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "windowsOSVersion": "[parameters('windowsOSVersion')]",
      "storageAccountName": "[parameters('storageAcctName')]",
      "storageAccountContainerName": "[parameters('storageAcctContainerName')]",
      "URI": "[variables('VMOneDataDiskUri')]",
      "DataDiskSizeGB": "80"

    }


  },
  "resources": [
    // {
    //  "name": "AvailabilitySetResource1",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2016-02-01",
    //  "dependsOn": [],
    //  "properties": {
    //      "mode": "Incremental",
    //    "templateLink": {
    //     //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
    //      "uri": "[variables('AvailabilitySetURI')]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "ASObject": {
    //        //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
    //        "value": "[variables('ASObject1')]"
    //      }
    //    }
    //  }
    //},
    // {
    //  "name": "AvailabilitySetResource2",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2016-02-01",
    //  "dependsOn": [],
    //  "properties": {
    //      "mode": "Incremental",
    //    "templateLink": {
    //     //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
    //      "uri": "[variables('AvailabilitySetURI')]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "ASObject": {
    //        //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
    //        "value": "[variables('ASObject2')]"
    //      }
    //    }
    //  }
    //},
    {
      "name": "StorageAccountResource",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [ ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('StorageAccountURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "StorageAccountObject": {
            //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
            "value": "[variables('StorageAccountObject')]"
          }
        }
      }
    },

    {
      "name": "NetworkInterfaceResource1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        //"[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource1')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource1')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject1')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        //       "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject2')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource3",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        //       "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
        //"[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource1')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource1')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject3')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource4",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
       //        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject4')]"
          }
        }
      }
    },

    {
      "name": "NetworkInterfaceResource5",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
       //         "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
               //"[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource1')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource1')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject5')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource6",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
        //        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"

               //       "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource2')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject6')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource7",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
       //         "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
              // "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource1')]",
        // "[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource1')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceLBURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject7')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource8",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
          //        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"

        //       "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource2')]",
        //       "[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject8')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource9",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
       // "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"

        //"[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource1')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]",
        //"[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource1')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject9')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource10",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
         //             "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
         //       "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource2')]",
        // "[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject10')]"
          }
        }
      }
    },
    {
      "name": "NetworkInterfaceResource11",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2016-02-01",
      "dependsOn": [
           //           "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
         //       "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource2')]",
        // "[resourceid('Microsoft.Resources/deployments/', 'VirtualNetworkResource')]" //,
        //       "[resourceid('Microsoft.Resources/deployments/', 'LoadBalancerResource2')]"

      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('NetworkInterfaceURI')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {

          "NICObject": {
            "value": "[variables('NICObject11')]"
          }
        }
      }
    },

    //{
    //  "name": "LoadBalancerResource1",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2016-02-01",
    //  "dependsOn": [
    //    "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource1')]"
    //  ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
    //      "uri": "[variables('LoadBalancerURI')]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "LBObject": {
    //        //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
    //        "value": "[variables('LBObject1')]"
    //      }
    //    }
    //  }
    //},
    // {
    //  "name": "LoadBalancerResource2",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2016-02-01",
    //  "dependsOn": [
    //        "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource2')]"
    //  ],
    //  "properties": {
    //      "mode": "Incremental",
    //    "templateLink": {
    //     //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
    //      "uri": "[variables('LoadBalancerURI')]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "LBObject": {
    //        //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
    //        "value": "[variables('LBObject2')]"
    //      }
    //    }
    //  }
    //},



    //{
    //  "name": "NetworkSecurityGroupResource1",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2016-02-01",
    //  //    "dependsOn": [
    //  //         "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource')]"
    //  //   ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
    //      "uri": "[variables('NetworkSecurityGroupURI')]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "NSGObject": {
    //        //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
    //        "value": "[variables('NSGObject1')]"
    //      }
    //    }
    //  }
    //},
    //{
    //  "name": "NetworkSecurityGroupResource2",
    //  "type": "Microsoft.Resources/deployments",
    //  "apiVersion": "2016-02-01",
    //  //    "dependsOn": [
    //  //         "[resourceid('Microsoft.Resources/deployments/', 'PublicIPResource')]"
    //  //   ],
    //  "properties": {
    //    "mode": "Incremental",
    //    "templateLink": {
    //      //"uri": "[concat(parameters('_artifactsLocation'),'/','availability_set.json', parameters('_artifactsLocationSasToken'))]",
    //      "uri": "[variables('NetworkSecurityGroupURI')]",
    //      "contentVersion": "1.0.0.0"
    //    },
    //    "parameters": {
    //      "NSGObject": {
    //        //"value": "[concat(parameters('OCReleaseVMName'),'-','availabilityset')]"
    //        "value": "[variables('NSGObject2')]"
    //      }
    //    }
    //  }
    //},


    {
      "name": "VMResource1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource1')]"
        //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
          "uri": "[variables('VMObject1').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject1')]"
          }
        }
      }
    },
    {
      "name": "VMResource2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource2')]"
        //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
          "uri": "[variables('VMObject2').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject2')]"
          }
        }
      }
    },
    {
      "name": "VMResource3",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource3')]"
        //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
          "uri": "[variables('VMObject3').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject3')]"
          }
        }
      }
    },
        {
          "name": "VMResource4",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource4')]"
    //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject4').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject4')]"
              }
            }
          }
        },
        {
          "name": "VMResource5",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource5')]"
    //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject5').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject5')]"
              }
            }
          }
        },
        {
          "name": "VMResource6",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource6')]"
    //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject6').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject6')]"
              }
            }
          }
        },
    {
      "name": "VMResource7",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
        "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource7')]"
        //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
          "uri": "[variables('VMObject7').URI]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "VMObject": {
            "value": "[variables('VMObject7')]"
          }
        }
      }
    },
        {
          "name": "VMResource8",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource8')]"
            //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject8').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject8')]"
              }
            }
          }
        },

        {
          "name": "VMResource9",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource9')]"
    //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject9').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject9')]"
              }
            }
          }
        },
        {
          "name": "VMResource10",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource10')]"
    //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject10').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject10')]"
              }
            }
          }
        },
        {
          "name": "VMResource11",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2015-01-01",
          "dependsOn": [
            "[resourceid('Microsoft.Resources/deployments/', 'StorageAccountResource')]",
            "[resourceid('Microsoft.Resources/deployments/', 'NetworkInterfaceResource11')]"
    //        "[resourceid('Microsoft.Resources/deployments/', 'AvailabilitySetResource1')]"
          ],
          "properties": {
            "mode": "Incremental",
            "templateLink": {
              //   "uri": "[concat(parameters('_artifactsLocation'),'/','VM.json', parameters('_artifactsLocationSasToken'))]",
              "uri": "[variables('VMObject11').URI]",
              "contentVersion": "1.0.0.0"
            },
            "parameters": {
              "VMObject": {
                "value": "[variables('VMObject11')]"
              }
            }
          }
        }//,

    //{
    //   "type": "Microsoft.Compute/virtualMachines/extensions",
    //   "name": "[concat(parameters('OCReleaseVMName'),'/CreateADPDC')]",
    //   "apiVersion": "2015-06-15",
    //   "location": "[resourceGroup().location]",
    //   "dependsOn": [
    //     "[resourceid('Microsoft.Resources/deployments/', 'VMResource1')]"
    //   ],
    //   "properties": {
    //     "publisher": "Microsoft.Powershell",
    //     "type": "DSC",
    //     "typeHandlerVersion": "2.19",
    //     "autoUpgradeMinorVersion": true,
    //     "settings": {
    //       "modulesUrl": "[variables('adPDCModulesURL')]",
    //       "SasToken": "",
    //       "configurationFunction": "[variables('adPDCConfigurationFunction')]",
    //       "wmfVersion": "4.0",
    //       "Properties": {
    //         "DomainName": "[parameters('domainName')]",
    //             "AdminCreds": {
    //               "UserName": "[parameters('adminUsername')]",
    //               "Password": "PrivateSettingsRef:AdminPassword"
    //             }
    //       }
    //     },
    //     "protectedSettings": {
    //       "Items": {
    //         "AdminPassword": "[parameters('adminPassword')]"
    //           }
    //     }
    //   }
    // }//,

//        {
//            "comments": "Join domain - JsonADDomainExtension",
//            "apiVersion": "2015-06-15",
//            "type": "Microsoft.Compute/virtualMachines/extensions",
//            "name": "[concat(parameters('OCAgentVMName'),'/joindomain')]",
//            "location": "[resourceGroup().location]",
//            "properties": {
//                "publisher": "Microsoft.Compute",
//                "type": "JsonADDomainExtension",
//                "typeHandlerVersion": "1.3",
//                "autoUpgradeMinorVersion": true,
//                "settings": {
//                    "Name": "[parameters('domainName')]",
//                    "User": "[variables('domainUser')]",
//                    "Restart": "true",
////                    "Options": "[variables('domainJoinOptions')]",
//                    "Options": "3",
//                    "OUPath": "OU=testOU,DC=domain,DC=Domain,DC=com"
//                },
//                "protectedSettings": {
//                    "Password": "[parameters('adminPassword')]"
//                }
//            }
//        }
  ] //,
  //"outputs": {
  //"hostname": {
  // "type": "string",

  // }
  // }
}
